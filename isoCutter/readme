This OpenFOAM code calculates an isosurface from a function f and a function value f0.
The function is defined in all vertex points of an fvMesh.
The routine travels throug all cells and looks at each cell face edge.
If the f is above f0 at one vertex and below f0 at the other vertex of an edge, the edge is cut at a position determined by linear interpolation.
The routine calculates the polygonal "isoFace" inside the cell formed by cutting its edges in this way.
It also calculates the volume and cell centre of the "submerged" subcell defined as the part of the original cell where f >= f0.

So far the routine assumes that a cut face is cut at two edges. For n-gons with n > 3 there will in general be special situations where this is not the case.
The function should then triangulate such faces interpolating the function to the face centre and do the face cutting on the triangular faces.

The routine was deliberately build to travel through all cells instead of all faces or edges to obtain its results.
The downside of this strategy is that the number of times an edge is visited is equal to twice the number of faces to which it belongs.
The advantage is that parallelisation is trivial. It should be noted that the operation performed on each edge is extremely simple.

